{"version":3,"sources":["api.js","animations.js","actions/detailsActions.js","util.js","components/Game.js","img/playstation.svg","img/xbox.svg","img/apple.svg","img/nintendo.svg","img/gamepad.svg","img/steam.svg","img/star-empty.svg","img/star-full.svg","components/GameDetail.js","img/github.svg","pages/Home.js","actions/gameActions.js","img/logo.svg","components/Nav.js","App.js","reportWebVitals.js","reducers/gameDetailReducer.js","reducers/gamesReducer.js","reducers/rootReducer.js","index.js"],"names":["api_key","base_url","currentYear","Date","getFullYear","currentMonth","month","getMonth","getCurrentMonth","currentDay","day","getDate","getCurrentDay","currentDate","lastYear","nextYear","popular_games","upcoming_games","new_games","popularGamesUrl","upcomingGamesUrl","newGamesUrl","gameDetailsUrl","id","gameScreenshotsUrl","searchGameUrl","game_name","fadeIn","hidden","opacity","show","transition","duration","exit","popup","scale","dispatch","a","type","axios","get","api","gameDetails","gameScreens","payload","game","data","screen","results","resizeImage","imagePath","size","match","replace","Game","name","released","image","useDispatch","div","layoutId","toString","onClick","document","body","style","overflow","detailActions","className","variants","initial","animate","to","h3","img","src","alt","GameDetail","pathId","useSelector","state","gameDetail","screenshots","isLoading","history","useHistory","getPlatform","platform","steam","apple","playstation","nintendo","xbox","gamepad","e","target","classList","contains","push","stopPropagation","nativeEvent","stopImmediatePropagation","rating","stars","Math","floor","i","fullStar","emptyStar","getStars","platforms","map","title","background_image","description_raw","autoPlay","infinite","animationType","autoPlayInterval","Home","useLocation","pathname","split","useEffect","popularData","newGamesData","upcomingGamesData","popular","newGames","upcoming","games","searched","class","href","rel","git","length","Nav","useState","textInput","setTextInput","searchGameHandler","preventDefault","searchedGames","logo","onSubmit","onChange","value","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","gameDetailReducer","action","gamesReducer","rootReducer","combineReducers","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a737c3a3.chunk.js","sourcesContent":["//Base URL\nconst api_key  = \"bc3d5b3a534440ea82233beb15f1c894\"\nconst base_url = \"https://api.rawg.io/api/\";\n\n//Getting the date\nconst getCurrentMonth = () => {\n    const month = new Date().getMonth() + 1;\n    if (month <= 10) {\n        return '0' + month;\n    }\n    else return month;\n}\n\nconst getCurrentDay = () => {\n    const day = new Date().getDate();\n    if (day < 10) {\n        return '0' + day;\n    }\n    else return day;\n}\n\nconst currentYear = new Date().getFullYear();\nconst currentMonth = getCurrentMonth();\nconst currentDay = getCurrentDay();\nconst currentDate = `${currentYear}-${currentMonth}-${currentDay}`;\nconst lastYear = `${currentYear - 1}-${currentMonth}-${currentDay}`;\nconst nextYear = `${currentYear + 1}-${currentMonth}-${currentDay}`;\n\n//Popular Games\nconst popular_games = `games?dates=${lastYear},${currentDate}&order=-rating&page_size=10&key=${api_key}`;\n//Upcoming Games\nconst upcoming_games = `games?dates=${currentDate},${nextYear}&ordering=-added&page_size=10&key=${api_key}`;\n//New Games\nconst new_games = `games?dates=${lastYear},${currentDate}&ordering=-released&page_size=10&key=${api_key}`;\n\n\nconst popularGamesUrl = `${base_url}${popular_games}`;\nconst upcomingGamesUrl = `${base_url}${upcoming_games}`\nconst newGamesUrl = `${base_url}${new_games}`;\nconst gameDetailsUrl = (id) => { return `${base_url}games/${id}?key=${api_key}`; }\nconst gameScreenshotsUrl = (id) => { return `${base_url}games/${id}/screenshots?key=${api_key}`; }\n\n//Searched Game\nconst searchGameUrl = (game_name) => `${base_url}games?search=${game_name}&page-size=9&key=${api_key}`;\n\nexport default {\n    popularGamesUrl,\n    upcomingGamesUrl,\n    newGamesUrl,\n    gameDetailsUrl,\n    gameScreenshotsUrl,\n    searchGameUrl\n};\n","export const fadeIn = {\n    hidden: {\n        opacity: 0\n    },\n    show: {\n        opacity: 1,\n        transition: {\n            duration: 0.75,\n        },\n        exit: {\n            opacity: 0,\n            transition: { duration: 0.75 }\n        }\n    }\n}\n\nexport const popup = {\n    hidden: {\n        opacity: 0,\n        scale: 0.5\n    },\n    show: {\n        opacity: 1,\n        scale: 1,\n        transition: {\n            duration: 0.75,\n        },\n        exit: {\n            opacity: 0,\n            transition: { duration: 0.75 }\n        }\n    }\n}","import axios from \"axios\"\nimport api from \"../api\"\n\nconst loadDetail = (id) => async (dispatch) => {\n    dispatch({\n        type: \"Loading_Detail\"\n    })\n    const gameDetails = await axios.get(api.gameDetailsUrl(id));\n    const gameScreens = await axios.get(api.gameScreenshotsUrl(id));\n\n    dispatch({\n        type: \"Get_Detail\",\n        payload: {\n            game: gameDetails.data,\n            screen: gameScreens.data.results\n        }\n    })\n}\n\n\nconst exitcard = () => async (dispatch) => {\n    dispatch({\n        type: \"Loading_Detail\"\n    })\n}\n\nexport default {\n    loadDetail,\n    exitcard\n}","\nexport const resizeImage = (imagePath, size) => {\n    if (imagePath !== null) {\n        const image = imagePath.match(/media\\/games/) ? imagePath.replace(\"/media/games/\", `/media/resize/${size}/-/games/`) : imagePath.replace(\"/media/screenshots/\", `/media/resize/${size}/-/screenshots/`);\n        return image;\n    }\n}","import { motion } from 'framer-motion';\nimport React from 'react'\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport detailActions from '../actions/detailsActions';\nimport { popup } from '../animations';\nimport \"../styles/game.scss\"\nimport { resizeImage } from '../util';\n\nexport const Game = ({ name, released, image, id }) => {\n\n/*     //get IsLoading \n    const { isLoading } = useSelector(state => state.gameDetail); */\n\n    //Load game details\n    const dispatch = useDispatch();\n    const loadDetailHandlr = () => {\n        //Hide home scroll bar\n        document.body.style.overflow = \"hidden\";\n        dispatch(detailActions.loadDetail(id));\n        //console.log(isLoading);\n    }\n\n    return (\n        /* the id of the involved animated components should have the same type(here string) */\n        <motion.div layoutId={id.toString()} onClick={loadDetailHandlr} className=\"styledGame\" variants={popup} initial=\"hidden\" animate=\"show\">\n            <Link to={`/game/${id}`}>\n                <motion.h3 layoutId={`h3 ${id.toString()}`}>{name}</motion.h3>\n                <p>{released}</p>\n                <motion.img layoutId={`image ${id.toString()}`} src={resizeImage(image, 640)} alt=\"img\" />\n            </Link>\n\n        </motion.div>\n    )\n};\n","export default __webpack_public_path__ + \"static/media/playstation.18cc4b9c.svg\";","export default __webpack_public_path__ + \"static/media/xbox.3e7db735.svg\";","export default __webpack_public_path__ + \"static/media/apple.5757c37e.svg\";","export default __webpack_public_path__ + \"static/media/nintendo.f579be04.svg\";","export default __webpack_public_path__ + \"static/media/gamepad.a7d81632.svg\";","export default __webpack_public_path__ + \"static/media/steam.d7b8819f.svg\";","export default __webpack_public_path__ + \"static/media/star-empty.36e65d41.svg\";","export default __webpack_public_path__ + \"static/media/star-full.70b242c2.svg\";","import { motion } from 'framer-motion';\nimport React from 'react'\nimport { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom';\nimport \"../styles/gameDetails.scss\"\nimport { resizeImage } from '../util';\nimport playstation from \"../img/playstation.svg\"\nimport xbox from \"../img/xbox.svg\";\nimport apple from \"../img/apple.svg\";\nimport nintendo from \"../img/nintendo.svg\";\nimport gamepad from \"../img/gamepad.svg\";\nimport steam from \"../img/steam.svg\";\nimport emptyStar from \"../img/star-empty.svg\";\nimport fullStar from \"../img/star-full.svg\";\nimport AliceCarousel from 'react-alice-carousel';\nimport \"react-alice-carousel/lib/alice-carousel.css\";\n\nexport const GameDetail = ({ pathId }) => {\n\n    //Data\n    const { game, screenshots, isLoading } = useSelector(state => state.gameDetail);\n\n    //Url redirector\n    const history = useHistory();\n\n    //const dispatch = useDispatch();\n\n    const exitCardHandlr = (e) => {\n        const element = e.target;\n        if (element.classList.contains('card-shadow')) {\n            document.body.style.overflow = \"auto\";\n            history.push('/');\n            //dispatch(detailsActions.exitcard());\n        }\n    }\n\n    const stopevent = (e) => {\n        //make game detail unclickable\n        e.stopPropagation();\n        e.nativeEvent.stopImmediatePropagation();\n    }\n\n    //get platform icon \n    const getPlatform = (platform) => {\n        switch (platform) {\n            case \"PC\": return steam;\n            case \"iOS\": return apple;\n            case \"macOS\": return apple;\n            case \"PlayStation 2\": return playstation;\n            case \"PlayStation 3\": return playstation;\n            case \"PlayStation 4\": return playstation;\n            case \"PlayStation 5\": return playstation;\n            case \"Nintendo Switch\": return nintendo;\n            case \"Xbox One\": return xbox;\n            case \"Xbox 360\": return xbox;\n            case \"Xbox\": return xbox;\n            case \"Xbox Series S/X\": return xbox;\n            default: return gamepad;\n        }\n    }\n\n    //get start icon from game rating\n    const getStars = () => {\n        const stars = [];\n        const rating = Math.floor(game.rating);\n        for (let i = 1; i <= 5; i++) {\n            if (i <= rating) {\n                stars.push(<img key={i} alt=\"star\" src={fullStar}></img>)\n            }\n            else {\n                stars.push(<motion.img key={i} alt=\"star\" src={emptyStar}></motion.img>)\n            }\n        }\n        return stars;\n    }\n\n    return (\n        <>\n            {!isLoading && (\n                <motion.div\n                    className=\"card-shadow\" onClick={exitCardHandlr}>\n                    <motion.div onClick={stopevent}\n                        /* I added the layoutId because framer motion needs an id for each component it uses */\n                        layoutId={pathId} className=\"detail\">\n                        <motion.div className=\"stats\">\n                            <motion.div className=\"rating\">\n                                <motion.h3 layoutId={`h3 ${pathId}`}>{game.name}</motion.h3>\n                                <p>Rating: {game.rating}</p >\n                                {getStars()}\n                            </motion.div>\n                            <motion.div className=\"info\">\n                                <h3>Platforms</h3>\n                                <motion.div className=\"platforms\">\n                                    {game.platforms.map(data => (\n                                        <img src={getPlatform(data.platform.name)} alt={data.platform.name} title={data.platform.name} />\n                                    ))}\n                                </motion.div>\n                            </motion.div>\n                        </motion.div>\n                        <motion.div className=\"media\">\n                            <motion.img layoutId={`image ${pathId}`} src={game.background_image} alt=\"image\" />\n                        </motion.div>\n                        <div className=\"description\">\n                            <p>{game.description_raw}</p>\n                        </div>\n\n                        <AliceCarousel autoPlay infinite animationType=\"fadeout\" autoPlayInterval=\"2000\" animationType=\"fadeout\" mouseTracking autoPlayStrategy=\"default\">\n                            {screenshots.map(screen => (\n                                <img className=\"sliderimg\" src={resizeImage(screen.image, 640)} key={screen.id} alt=\"screenshot\" />\n                            ))}\n                        </AliceCarousel>\n\n                    </motion.div>\n                </motion.div>\n            )}\n\n        </>\n    )\n} \n","export default __webpack_public_path__ + \"static/media/github.478f8772.svg\";","import { AnimatePresence, AnimateSharedLayout, motion } from 'framer-motion';\nimport React from 'react'\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from 'react-router-dom';\nimport { loadGames } from \"../actions/gameActions\";\nimport { fadeIn } from '../animations';\nimport { Game } from '../components/Game';\nimport { GameDetail } from '../components/GameDetail';\nimport \"../styles/home.scss\"\nimport git from \"../img/github.svg\" \n\nexport const Home = () => {\n    //Get current location\n    const location = useLocation();\n    const pathId = location.pathname.split('/')[2];\n\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(loadGames());\n    }, []);\n\n    //Get State\n    const { popular, newGames, upcoming, searched } = useSelector(state => state.games);\n    return (\n        <>\n            <div class=\"sticky-container\">\n                <div class=\"button-container\">\n                    <a title=\"Source code\" href=\"https://github.com/anascheriet/Gamez-VideoGameLibrary\" target=\"_blank\" rel=\"noreferrer\"><img src={git} alt=\"github\" /></a>\n                </div>\n            </div>\n            <motion.div className=\"GameList\" variants={fadeIn} initial=\"hidden\" animate=\"show\">\n                <AnimateSharedLayout type=\"crossfade\">\n                    {/* wrap all the components that will be transitioning*/}\n                    <AnimatePresence>\n                        {/* The component that will be animated should have a conditional toggle, pathId here */}\n                        {pathId && <GameDetail pathId={pathId} />}\n                    </AnimatePresence>\n                    {searched.length ? (\n                        <div className=\"searchedGames\">\n                            <h2>Searched Games</h2>\n                            <div className=\"Games\">\n                                {searched.map(game => (\n                                    <Game key={game.id} name={game.name} released={game.released}\n                                        id={game.id} image={game.background_image} />\n                                ))}\n                            </div>\n                        </div>) : ''}\n                    <h2>Upcoming Games</h2>\n                    <div className=\"Games\">\n                        {upcoming.map(game => (\n                            <Game key={game.id} name={game.name} released={game.released}\n                                id={game.id} image={game.background_image} />\n                        ))}\n\n                    </div>\n\n                    <h2>New Games</h2>\n                    <div className=\"Games\">\n                        {newGames.map(game => (\n                            <Game key={game.id} name={game.name} released={game.released}\n                                id={game.id} image={game.background_image} />\n                        ))}\n                    </div>\n                    <h2>Popular Games</h2>\n                    <div className=\"Games\">\n                        {popular.map(game => (\n                            <Game key={game.id} name={game.name} released={game.released}\n                                id={game.id} image={game.background_image} />\n                        ))}\n                    </div>\n                </AnimateSharedLayout>\n            </motion.div>\n        </>\n    )\n}\n","import axios from \"axios\"\nimport api from \"../api\";\n\n\n\n//Action Creator\nexport const loadGames = () => async (dispatch) => {\n    //Fetch axios\n    //console.log(popularGamesUrl);\n    const popularData = await axios.get(api.popularGamesUrl);\n    const newGamesData = await axios.get(api.newGamesUrl);\n    const upcomingGamesData = await axios.get(api.upcomingGamesUrl);\n\n    dispatch({\n        type: \"Fetch_Games\",\n        payload: {\n            popular: popularData.data.results,\n            newGames: newGamesData.data.results,\n            upcoming: upcomingGamesData.data.results\n        }\n    })\n}\n\nexport const fetchSearch = (game_name) => async (dispatch) => {\n    const searchedGames = await axios.get(api.searchGameUrl(game_name));\n\n    dispatch({\n        type: \"Fetch_Searched\",\n        payload: {\n            searched: searchedGames.data.results\n        }\n    })\n}","export default __webpack_public_path__ + \"static/media/logo.8a013a28.svg\";","import { motion } from 'framer-motion'\nimport React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { fetchSearch } from '../actions/gameActions'\nimport { fadeIn } from '../animations'\nimport logo from \"../img/logo.svg\"\nimport \"../styles/Nav.scss\"\n\nexport const Nav = () => {\n\n    //dispatch the action\n    const dispatch = useDispatch();\n\n    //Input state\n    const [textInput, setTextInput] = useState(\"\");\n\n    const inputChangeHandler = (e) => {\n        setTextInput(e.target.value);\n    }\n\n    const clearSearched = () => {\n        dispatch({ type: \"Clear_Searched\" });\n        setTextInput(\"\");\n    }\n\n    //search function\n    const searchGameHandler = (e) => {\n        e.preventDefault();\n        dispatch(fetchSearch(textInput));\n        setTextInput(\"\");\n    }\n\n    return (\n\n        <div>\n            <motion.div className=\"StyledNav\" variants={fadeIn} initial=\"hidden\" animate=\"show\">\n\n                \n                    <motion.div onClick={clearSearched} className=\"Logo\">\n                        <img src={logo} alt=\"logo\" />\n                        <h1>Gamez</h1>\n                    </motion.div>\n\n                <form className=\"search\" onSubmit={(e) => searchGameHandler(e)}>\n                    <input type=\"text\" onChange={inputChangeHandler} value={textInput} />\n                    <button type=\"submit\">Search</button>\n                </form>\n\n            </motion.div>\n        </div>\n    )\n}\n","import { Home } from \"./pages/Home\";\nimport \"./styles/app.scss\"\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Nav } from \"./components/Nav\";\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Router>\n        <Route path={['/game/:id', '/']}>\n          <Home />\n        </Route>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\n    game: {},\n    screenshots: {},\n    isLoading: true\n}\n\n\nconst gameDetailReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"Get_Detail\":\n            return {\n                ...state,\n                game: action.payload.game,\n                screenshots: action.payload.screen,\n                isLoading: false\n            };\n        case \"Loading_Detail\":\n            return {\n                ...state,\n                isLoading: true\n            }\n        default:\n            return { ...state }\n    }\n}\n\nexport default gameDetailReducer;","const initialState = {\n    popular: [],\n    newGames: [],\n    upcoming: [],\n    searched: []\n}\n\nconst gamesReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"Fetch_Games\":\n            return {\n                ...state,\n                popular: action.payload.popular,\n                newGames: action.payload.newGames,\n                upcoming: action.payload.upcoming\n            }\n        case \"Fetch_Searched\":\n            return {\n                ...state,\n                searched: action.payload.searched\n            }\n\n        case \"Clear_Searched\":\n            return {\n                ...state,\n                searched: []\n            }\n        default: return { ...state }\n    }\n}\n\nexport default gamesReducer;","import { combineReducers } from \"redux\";\nimport gameDetailReducer from \"./gameDetailReducer\";\nimport gamesReducer from \"./gamesReducer\";\n\nconst rootReducer = combineReducers({\n    games: gamesReducer,\n    gameDetail: gameDetailReducer\n})\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n//REDUX SETUP\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\n//Set up middleWare so redux can use async \nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancer(applyMiddleware(thunk)));\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}